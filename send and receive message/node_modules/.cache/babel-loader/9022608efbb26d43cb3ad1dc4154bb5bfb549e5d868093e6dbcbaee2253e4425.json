{"ast":null,"code":"var _jsxFileName = \"/home/farjaad/Desktop/blockchain/send and receive message/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./assets/MetaMask_Fox.svg.png\";\nimport { ethers } from \"ethers\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { useState } from \"react\";\nimport Form from \"./component/form\";\n\n// global variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet provider;\nlet accounts;\nlet chainId;\nfunction App() {\n  _s();\n  const [address, setAddress] = useState();\n  const [error, setError] = useState();\n  const [netWork, setNetwork] = useState(false);\n\n  //function to check if we are on the goreli network or not\n\n  //function to connect to meta mask\n  async function connectToMetamask() {\n    try {\n      //to check if metamask is installed or not\n      provider = new ethers.providers.Web3Provider(window.ethereum);\n      //get user active account\n      accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAddress(accounts[0]);\n      setError(null);\n      checkNetwork();\n      setError(null);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-cyan-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"w-52 h-52  mx-auto\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), !address ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"w-full mt-2 mb-2 text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n        //className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n        ,\n        onClick: () => {\n          connectToMetamask();\n        },\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-cyan-200 mt-2 mb-2 ml-2 mr-2 h-6\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), !error ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this), address ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: netWork ? /*#__PURE__*/_jsxDEV(Form, {\n          sender: address,\n          provider: provider,\n          checkNetwork: checkNetwork\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your are not connected to goreli network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"w-full mt-2 mb-2 text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n            //className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n            ,\n            onClick: () => {\n              checkNetwork();\n            },\n            children: \"Refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5BkuL3iDQXPBsE9tOoYR3H4fvCk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ethers","detectEthereumProvider","useState","Form","jsxDEV","_jsxDEV","provider","accounts","chainId","App","_s","address","setAddress","error","setError","netWork","setNetwork","connectToMetamask","providers","Web3Provider","window","ethereum","send","checkNetwork","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","sender","_c","$RefreshReg$"],"sources":["/home/farjaad/Desktop/blockchain/send and receive message/src/App.js"],"sourcesContent":["import logo from \"./assets/MetaMask_Fox.svg.png\";\nimport { ethers } from \"ethers\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { useState } from \"react\";\nimport Form from \"./component/form\";\n\n// global variables\nlet provider;\nlet accounts;\nlet chainId;\nfunction App() {\n  const [address, setAddress] = useState();\n  const [error, setError] = useState();\n  const [netWork, setNetwork] = useState(false);\n\n  //function to check if we are on the goreli network or not\n\n  //function to connect to meta mask\n  async function connectToMetamask() {\n    try {\n      //to check if metamask is installed or not\n      provider = new ethers.providers.Web3Provider(window.ethereum);\n      //get user active account\n      accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAddress(accounts[0]);\n      setError(null);\n      checkNetwork();\n      setError(null);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-cyan-100\">\n      <div>\n        <img src={logo} className=\"w-52 h-52  mx-auto\" alt=\"\"></img>\n        {!address ? (\n          <button\n            type=\"button\"\n            className=\"w-full mt-2 mb-2 text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n            //className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n            onClick={() => {\n              connectToMetamask();\n            }}\n          >\n            Connect\n          </button>\n        ) : (\n          <div className=\"bg-cyan-200 mt-2 mb-2 ml-2 mr-2 h-6\">\n            <p>{address}</p>\n          </div>\n        )}\n        {!error ? <p></p> : <p>{error}</p>}\n\n        {address ? (\n          <div>\n            {netWork ? (\n              <Form\n                sender={address}\n                provider={provider}\n                checkNetwork={checkNetwork}\n              ></Form>\n            ) : (\n              <div>\n                <p>Your are not connected to goreli network</p>\n                <button\n                  className=\"w-full mt-2 mb-2 text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2\"\n                  //className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n                  onClick={() => {\n                    checkNetwork();\n                  }}\n                >\n                  Refresh\n                </button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}