{"ast":null,"code":"var _jsxFileName = \"/home/farjaad/Desktop/blockchain/metamask integration/metamask-integration/src/App.js\";\nimport logo from \"./assets/MetaMask_Fox.svg.png\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { useState } from \"react\";\nimport Form from './component/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet provider;\nlet accounts;\nlet chainId;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-indigo-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Transfer form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"m-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"m-5\",\n            type: \"text\",\n            placeholder: \"Enter your address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"m-5\",\n            type: \"text\",\n            placeholder: \"Enter your value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n\n  // const [address, setAddress] = useState();\n  // const [error, setError] = useState();\n  // const [netWork, setNetwork] = useState();\n\n  // async function checkNetwork() {\n  //   chainId = await provider.request({ method: \"eth_chainId\" });\n  //   if (chainId === \"0x5\") {\n  //     setNetwork(true);\n  //   }\n  // }\n\n  // async function connectToMetamask() {\n  //   try {\n  //     provider = await detectEthereumProvider();\n  //     accounts = await provider.request({ method: \"eth_requestAccounts\" });\n  //     //console.log(chainId);\n  //     //console.log(accounts);\n  //     setAddress(accounts[0]);\n  //     setError(null);\n  //     checkNetwork();\n  //   } catch (error) {\n  //     //return <p>{error.message}</p>;\n  //     setError(error.message);\n  //   }\n  // }\n  // return (\n  //   <div className=\"flex items-center justify-center min-h-screen\">\n  //     <div>\n  //       <img src={logo} className=\"w-52 h-52 border-2\" alt=\"\"></img>\n  //       {!address ? (\n  //         <button\n  //           className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n  //           onClick={() => {\n  //             connectToMetamask();\n  //           }}\n  //         >\n  //           Connect\n  //         </button>\n  //       ) : (\n  //         <div className=\"bg-sky-500\">\n  //           <p>{address}</p>\n  //         </div>\n  //       )}\n  //       {!error ? <p></p> : <p>{error}</p>}\n\n  //       {address ? (\n  //         <div>\n  //           {netWork ? (\n  //             <button\n  //               className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n  //               onClick={() => {\n  //                 connectToMetamask();\n  //               }}\n  //             >\n  //               Transfer\n  //             </button>\n  //           ) : (\n  //             <p>Your are not connected to goreli network</p>\n  //           )}\n  //         </div>\n  //       ) : (\n  //         <div></div>\n  //       )}\n  //     </div>\n  //   </div>\n  // );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","detectEthereumProvider","useState","Form","jsxDEV","_jsxDEV","provider","accounts","chainId","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["/home/farjaad/Desktop/blockchain/metamask integration/metamask-integration/src/App.js"],"sourcesContent":["import logo from \"./assets/MetaMask_Fox.svg.png\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { useState } from \"react\";\nimport Form from './component/form'\nlet provider;\nlet accounts;\nlet chainId;\nfunction App() {\n  return (\n    <div className=\"flex items-center justify-center min-h-screen\">\n      <div className=\"bg-indigo-500\">\n        <div>\n          <h1 className=\"text-center\">Transfer form</h1>\n        </div>\n        <form className=\"m-5\">\n          <div>\n            <input\n              className=\"m-5\"\n              type=\"text\"\n              placeholder=\"Enter your address\"\n            ></input>\n          </div>\n          <div>\n            <input\n              className=\"m-5\"\n              type=\"text\"\n              placeholder=\"Enter your value\"\n            ></input>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n\n  // const [address, setAddress] = useState();\n  // const [error, setError] = useState();\n  // const [netWork, setNetwork] = useState();\n\n  // async function checkNetwork() {\n  //   chainId = await provider.request({ method: \"eth_chainId\" });\n  //   if (chainId === \"0x5\") {\n  //     setNetwork(true);\n  //   }\n  // }\n\n  // async function connectToMetamask() {\n  //   try {\n  //     provider = await detectEthereumProvider();\n  //     accounts = await provider.request({ method: \"eth_requestAccounts\" });\n  //     //console.log(chainId);\n  //     //console.log(accounts);\n  //     setAddress(accounts[0]);\n  //     setError(null);\n  //     checkNetwork();\n  //   } catch (error) {\n  //     //return <p>{error.message}</p>;\n  //     setError(error.message);\n  //   }\n  // }\n  // return (\n  //   <div className=\"flex items-center justify-center min-h-screen\">\n  //     <div>\n  //       <img src={logo} className=\"w-52 h-52 border-2\" alt=\"\"></img>\n  //       {!address ? (\n  //         <button\n  //           className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n  //           onClick={() => {\n  //             connectToMetamask();\n  //           }}\n  //         >\n  //           Connect\n  //         </button>\n  //       ) : (\n  //         <div className=\"bg-sky-500\">\n  //           <p>{address}</p>\n  //         </div>\n  //       )}\n  //       {!error ? <p></p> : <p>{error}</p>}\n\n  //       {address ? (\n  //         <div>\n  //           {netWork ? (\n  //             <button\n  //               className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n  //               onClick={() => {\n  //                 connectToMetamask();\n  //               }}\n  //             >\n  //               Transfer\n  //             </button>\n  //           ) : (\n  //             <p>Your are not connected to goreli network</p>\n  //           )}\n  //         </div>\n  //       ) : (\n  //         <div></div>\n  //       )}\n  //     </div>\n  //   </div>\n  // );\n}\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,+BAA+B;AAChD,OAAOC,sBAAsB,MAAM,2BAA2B;AAC9D,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnC,IAAIC,QAAQ;AACZ,IAAIC,QAAQ;AACZ,IAAIC,OAAO;AACX,SAASC,GAAGA,CAAA,EAAG;EACb,oBACEJ,OAAA;IAAKK,SAAS,EAAC,+CAA+C;IAAAC,QAAA,eAC5DN,OAAA;MAAKK,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BN,OAAA;QAAAM,QAAA,eACEN,OAAA;UAAIK,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACNV,OAAA;QAAMK,SAAS,EAAC,KAAK;QAAAC,QAAA,gBACnBN,OAAA;UAAAM,QAAA,eACEN,OAAA;YACEK,SAAS,EAAC,KAAK;YACfM,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC;UAAoB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNV,OAAA;UAAAM,QAAA,eACEN,OAAA;YACEK,SAAS,EAAC,KAAK;YACfM,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC;UAAkB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;;EAGR;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACG,EAAA,GA7FQT,GAAG;AA8FZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}