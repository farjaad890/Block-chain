{"ast":null,"code":"var _jsxFileName = \"/home/farjaad/Desktop/blockchain/metamask integration/metamask-integration/src/component/button.js\";\n// import { ethers } from \"ethers\";\n//const { ethers } = require(\"ethers\");\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet provider;\nlet accounts;\nfunction connectionButton() {\n  async function connectToMetamask() {\n    try {\n      provider = await detectEthereumProvider();\n      accounts = await provider.send(\"eth_requestAccounts\", []);\n      console.log(accounts.result[0]);\n    } catch (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  if (!provider) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-full bg-green-500 mt-2 mb-2 h-10\",\n      onClick: () => {\n        connectToMetamask();\n      },\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: accounts.results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default connectionButton;","map":{"version":3,"names":["detectEthereumProvider","jsxDEV","_jsxDEV","provider","accounts","connectionButton","connectToMetamask","send","console","log","result","error","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","results"],"sources":["/home/farjaad/Desktop/blockchain/metamask integration/metamask-integration/src/component/button.js"],"sourcesContent":["// import { ethers } from \"ethers\";\n//const { ethers } = require(\"ethers\");\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nlet provider;\nlet accounts;\nfunction connectionButton() {\n  async function connectToMetamask() {\n    try {\n      provider = await detectEthereumProvider();\n      accounts = await provider.send(\"eth_requestAccounts\", []);\n      console.log(accounts.result[0]);\n    } catch (error) {\n      return <p>{error.message}</p>;\n    }\n  }\n  if (!provider) {\n    return (\n      <button\n        className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n        onClick={() => {\n          connectToMetamask();\n        }}\n      >\n        Connect\n      </button>\n    );\n  } else {\n    return <p>{accounts.results}</p>;\n  }\n}\nexport default connectionButton;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,sBAAsB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/D,IAAIC,QAAQ;AACZ,IAAIC,QAAQ;AACZ,SAASC,gBAAgBA,CAAA,EAAG;EAC1B,eAAeC,iBAAiBA,CAAA,EAAG;IACjC,IAAI;MACFH,QAAQ,GAAG,MAAMH,sBAAsB,CAAC,CAAC;MACzCI,QAAQ,GAAG,MAAMD,QAAQ,CAACI,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MACzDC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,oBAAOT,OAAA;QAAAU,QAAA,EAAID,KAAK,CAACE;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAC/B;EACF;EACA,IAAI,CAACd,QAAQ,EAAE;IACb,oBACED,OAAA;MACEgB,SAAS,EAAC,oCAAoC;MAC9CC,OAAO,EAAEA,CAAA,KAAM;QACbb,iBAAiB,CAAC,CAAC;MACrB,CAAE;MAAAM,QAAA,EACH;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAEb,CAAC,MAAM;IACL,oBAAOf,OAAA;MAAAU,QAAA,EAAIR,QAAQ,CAACgB;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAClC;AACF;AACA,eAAeZ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}