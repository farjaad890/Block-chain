{"ast":null,"code":"var _jsxFileName = \"/home/farjaad/Desktop/blockchain/metamask integration/metamask-integration/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./assets/MetaMask_Fox.svg.png\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { useState } from \"react\";\nimport Form from \"./component/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet provider;\nlet accounts;\nlet chainId;\nfunction App() {\n  _s();\n  const [address, setAddress] = useState();\n  const [error, setError] = useState();\n  const [netWork, setNetwork] = useState();\n  async function tranfer(address, value) {\n    const transaction = provider.request({\n      method: \"eth_sendTransaction\",\n      params: [{\n        from: address,\n        to: \"0x3a44c28D48F18AF424AD7623F37F6aE0013314D8\",\n        value: \"38D7EA4C68000\"\n      }]\n    });\n  }\n  async function checkNetwork() {\n    chainId = await provider.request({\n      method: \"eth_chainId\"\n    });\n    if (chainId === \"0x5\") {\n      setNetwork(true);\n    }\n  }\n  async function connectToMetamask() {\n    try {\n      provider = await detectEthereumProvider();\n      accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      //console.log(chainId);\n      //console.log(accounts);\n      setAddress(accounts[0]);\n      setError(null);\n      checkNetwork();\n    } catch (error) {\n      //return <p>{error.message}</p>;\n      setError(error.message);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"w-52 h-52 border-2\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), !address ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full bg-green-500 mt-2 mb-2 h-10\",\n        onClick: () => {\n          connectToMetamask();\n        },\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-sky-500\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), !error ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this), address ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: netWork ? /*#__PURE__*/_jsxDEV(Form, {\n          sender: address,\n          provid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your are not connected to goreli network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"t/QN7OZmWPDM0l0SX2MaxohEMlI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","detectEthereumProvider","useState","Form","jsxDEV","_jsxDEV","provider","accounts","chainId","App","_s","address","setAddress","error","setError","netWork","setNetwork","tranfer","value","transaction","request","method","params","from","to","checkNetwork","connectToMetamask","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sender","provid","_c","$RefreshReg$"],"sources":["/home/farjaad/Desktop/blockchain/metamask integration/metamask-integration/src/App.js"],"sourcesContent":["import logo from \"./assets/MetaMask_Fox.svg.png\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { useState } from \"react\";\nimport Form from \"./component/form\";\nlet provider;\nlet accounts;\nlet chainId;\nfunction App() {\n  const [address, setAddress] = useState();\n  const [error, setError] = useState();\n  const [netWork, setNetwork] = useState();\n\n  async function tranfer(address, value) {\n    const transaction = provider.request({\n      method: \"eth_sendTransaction\",\n      params: [\n        {\n          from: address,\n          to: \"0x3a44c28D48F18AF424AD7623F37F6aE0013314D8\",\n          value: \"38D7EA4C68000\",\n        },\n      ],\n    });\n  }\n  async function checkNetwork() {\n    chainId = await provider.request({ method: \"eth_chainId\" });\n    if (chainId === \"0x5\") {\n      setNetwork(true);\n    }\n  }\n\n  async function connectToMetamask() {\n    try {\n      provider = await detectEthereumProvider();\n      accounts = await provider.request({ method: \"eth_requestAccounts\" });\n      //console.log(chainId);\n      //console.log(accounts);\n      setAddress(accounts[0]);\n      setError(null);\n      checkNetwork();\n    } catch (error) {\n      //return <p>{error.message}</p>;\n      setError(error.message);\n    }\n  }\n  return (\n    <div className=\"flex items-center justify-center min-h-screen\">\n      <div>\n        <img src={logo} className=\"w-52 h-52 border-2\" alt=\"\"></img>\n        {!address ? (\n          <button\n            className=\"w-full bg-green-500 mt-2 mb-2 h-10\"\n            onClick={() => {\n              connectToMetamask();\n            }}\n          >\n            Connect\n          </button>\n        ) : (\n          <div className=\"bg-sky-500\">\n            <p>{address}</p>\n          </div>\n        )}\n        {!error ? <p></p> : <p>{error}</p>}\n\n        {address ? (\n          <div>\n            {netWork ? (\n              <Form sender={address} provid></Form>\n            ) : (\n              <p>Your are not connected to goreli network</p>\n            )}\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}